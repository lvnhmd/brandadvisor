angular.module("app",["ngRoute"]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc",function(t,e){t.login=function(t,o){e.login(t,o).then(function(t){console.log(t)})}}]),angular.module("app").controller("PostsCtrl",["$scope","PostsSvc",function(t,e){t.addPost=function(){t.postBody&&e.create({username:"dickeyxxx",body:t.postBody}).success(function(e){t.posts.unshift(e),t.postBody=null})},e.fetch().success(function(e){t.posts=e})}]),angular.module("app").service("PostsSvc",["$http",function(t){this.fetch=function(){return t.get("/api/posts")},this.create=function(e){return t.post("/api/posts",e)}}]),angular.module("app").config(["$routeProvider",function(t){t.when("/",{controller:"PostsCtrl",templateUrl:"/templates/posts.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"/templates/register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"/templates/login.html"})}]),angular.module("app").service("UserSvc",["$http",function(t){var e=this;e.getUser=function(){return t.get("/api/users",{headers:{"X-Auth":this.token}})},e.login=function(o,n){return t.post("/api/sessions",{username:o,password:n}).then(function(t){return e.token=t.data,console.log(e.token),e.getUser()})}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsImxvZ2luLmN0cmwuanMiLCJwb3N0cy5jdHJsLmpzIiwicG9zdHMuc3ZjLmpzIiwicm91dGVzLmpzIiwidXNlci5zdmMuanMiXSwibmFtZXMiOlsiYW5ndWxhciIsIm1vZHVsZSIsImNvbnRyb2xsZXIiLCIkc2NvcGUiLCJVc2VyU3ZjIiwibG9naW4iLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwidGhlbiIsInVzZXIiLCJjb25zb2xlIiwibG9nIiwiUG9zdHNTdmMiLCJhZGRQb3N0IiwicG9zdEJvZHkiLCJjcmVhdGUiLCJib2R5Iiwic3VjY2VzcyIsInBvc3QiLCJwb3N0cyIsInVuc2hpZnQiLCJmZXRjaCIsInNlcnZpY2UiLCIkaHR0cCIsInRoaXMiLCJnZXQiLCJjb25maWciLCIkcm91dGVQcm92aWRlciIsIndoZW4iLCJ0ZW1wbGF0ZVVybCIsInN2YyIsImdldFVzZXIiLCJoZWFkZXJzIiwiWC1BdXRoIiwidG9rZW4iLCJ2YWwiLCJkYXRhIl0sIm1hcHBpbmdzIjoiQUFBQUEsUUFBQUMsT0FBQSxPQUFBLFlDQUFELFFBQUFDLE9BQUEsT0FDQUMsV0FBQSxhQUFBLFNBQUEsVUFBQSxTQUFBQyxFQUFBQyxHQUNBRCxFQUFBRSxNQUFBLFNBQUFDLEVBQUFDLEdBQ0FILEVBQUFDLE1BQUFDLEVBQUFDLEdBQ0FDLEtBQUEsU0FBQUMsR0FDQUMsUUFBQUMsSUFBQUYsU0NMQVQsUUFBQUMsT0FBQSxPQUNBQyxXQUFBLGFBQUEsU0FBQSxXQUFBLFNBQUFDLEVBQUFTLEdBQ0FULEVBQUFVLFFBQUEsV0FDQVYsRUFBQVcsVUFDQUYsRUFBQUcsUUFDQVQsU0FBQSxZQUNBVSxLQUFBYixFQUFBVyxXQUVBRyxRQUFBLFNBQUFDLEdBQ0FmLEVBQUFnQixNQUFBQyxRQUFBRixHQUNBZixFQUFBVyxTQUFBLFFBS0FGLEVBQUFTLFFBQ0FKLFFBQUEsU0FBQUUsR0FDQWhCLEVBQUFnQixNQUFBQSxPQ2pCQW5CLFFBQUFDLE9BQUEsT0FDQXFCLFFBQUEsWUFBQSxRQUFBLFNBQUFDLEdBQ0FDLEtBQUFILE1BQUEsV0FDQSxNQUFBRSxHQUFBRSxJQUFBLGVBRUFELEtBQUFULE9BQUEsU0FBQUcsR0FDQSxNQUFBSyxHQUFBTCxLQUFBLGFBQUFBLE9DTkFsQixRQUFBQyxPQUFBLE9BQ0F5QixRQUFBLGlCQUFBLFNBQUFDLEdBQ0FBLEVBQ0FDLEtBQUEsS0FBQTFCLFdBQUEsWUFBQTJCLFlBQUEsMEJBQ0FELEtBQUEsYUFBQTFCLFdBQUEsZUFBQTJCLFlBQUEsNkJBQ0FELEtBQUEsVUFBQTFCLFdBQUEsWUFBQTJCLFlBQUEsNkJDTEE3QixRQUFBQyxPQUFBLE9BQ0FxQixRQUFBLFdBQUEsUUFBQSxTQUFBQyxHQUNBLEdBQUFPLEdBQUFOLElBQ0FNLEdBQUFDLFFBQUEsV0FDQSxNQUFBUixHQUFBRSxJQUFBLGNBQ0FPLFNBQ0FDLFNBQUFULEtBQUFVLFVBSUFKLEVBQUF6QixNQUFBLFNBQUFDLEVBQUFDLEdBQ0EsTUFBQWdCLEdBQUFMLEtBQUEsaUJBQ0FaLFNBQUFBLEVBQ0FDLFNBQUFBLElBQ0FDLEtBQUEsU0FBQTJCLEdBR0EsTUFGQUwsR0FBQUksTUFBQUMsRUFBQUMsS0FDQTFCLFFBQUFDLElBQUFtQixFQUFBSSxPQUNBSixFQUFBQyIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJhbmd1bGFyLm1vZHVsZSgnYXBwJywgWyduZ1JvdXRlJ10pXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbiAgICAuY29udHJvbGxlcignTG9naW5DdHJsJywgZnVuY3Rpb24gKCRzY29wZSwgVXNlclN2Yykge1xuICAgICAgICAkc2NvcGUubG9naW4gPSBmdW5jdGlvbiAodXNlcm5hbWUsIHBhc3N3b3JkKSB7XG4gICAgICAgICAgICBVc2VyU3ZjLmxvZ2luKHVzZXJuYW1lLCBwYXNzd29yZClcbiAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAodXNlcikge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh1c2VyKVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICB9KVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29udHJvbGxlcignUG9zdHNDdHJsJywgZnVuY3Rpb24gKCRzY29wZSwgUG9zdHNTdmMpIHtcbiAgJHNjb3BlLmFkZFBvc3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKCRzY29wZS5wb3N0Qm9keSkge1xuICAgICAgUG9zdHNTdmMuY3JlYXRlKHtcbiAgICAgICAgdXNlcm5hbWU6ICdkaWNrZXl4eHgnLFxuICAgICAgICBib2R5OiAgICAgJHNjb3BlLnBvc3RCb2R5XG4gICAgICB9KVxuICAgICAgLnN1Y2Nlc3MoZnVuY3Rpb24gKHBvc3QpIHtcbiAgICAgICAgJHNjb3BlLnBvc3RzLnVuc2hpZnQocG9zdClcbiAgICAgICAgJHNjb3BlLnBvc3RCb2R5ID0gbnVsbFxuICAgICAgfSlcbiAgICB9XG4gIH1cblxuICBQb3N0c1N2Yy5mZXRjaCgpXG4gIC5zdWNjZXNzKGZ1bmN0aW9uIChwb3N0cykge1xuICAgICRzY29wZS5wb3N0cyA9IHBvc3RzXG4gIH0pXG59KVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uc2VydmljZSgnUG9zdHNTdmMnLCBmdW5jdGlvbiAoJGh0dHApIHtcbiAgdGhpcy5mZXRjaCA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL3Bvc3RzJylcbiAgfVxuICB0aGlzLmNyZWF0ZSA9IGZ1bmN0aW9uIChwb3N0KSB7XG4gICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvcG9zdHMnLCBwb3N0KVxuICB9XG59KVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29uZmlnKGZ1bmN0aW9uICgkcm91dGVQcm92aWRlcikge1xuICAkcm91dGVQcm92aWRlclxuICAud2hlbignLycsICAgICAgICAgeyBjb250cm9sbGVyOiAnUG9zdHNDdHJsJywgdGVtcGxhdGVVcmw6ICcvdGVtcGxhdGVzL3Bvc3RzLmh0bWwnIH0pXG4gIC53aGVuKCcvcmVnaXN0ZXInLCB7IGNvbnRyb2xsZXI6ICdSZWdpc3RlckN0cmwnLCB0ZW1wbGF0ZVVybDogJy90ZW1wbGF0ZXMvcmVnaXN0ZXIuaHRtbCcgfSlcbiAgLndoZW4oJy9sb2dpbicsICAgIHsgY29udHJvbGxlcjogJ0xvZ2luQ3RybCcsIHRlbXBsYXRlVXJsOiAnL3RlbXBsYXRlcy9sb2dpbi5odG1sJyB9KVxufSlcblxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4gICAgLnNlcnZpY2UoJ1VzZXJTdmMnLCBmdW5jdGlvbiAoJGh0dHApIHtcbiAgICAgICAgdmFyIHN2YyA9IHRoaXNcbiAgICAgICAgc3ZjLmdldFVzZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL3VzZXJzJywge1xuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICAgICAgXCJYLUF1dGhcIjogdGhpcy50b2tlblxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICAgICAgc3ZjLmxvZ2luID0gZnVuY3Rpb24gKHVzZXJuYW1lLCBwYXNzd29yZCkge1xuICAgICAgICAgICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvc2Vzc2lvbnMnLCB7XG4gICAgICAgICAgICAgICAgdXNlcm5hbWU6IHVzZXJuYW1lLFxuICAgICAgICAgICAgICAgIHBhc3N3b3JkOiBwYXNzd29yZFxuICAgICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAodmFsKSB7XG4gICAgICAgICAgICAgICAgc3ZjLnRva2VuID0gdmFsLmRhdGFcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhzdmMudG9rZW4pXG4gICAgICAgICAgICAgICAgcmV0dXJuIHN2Yy5nZXRVc2VyKClcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICB9KVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
